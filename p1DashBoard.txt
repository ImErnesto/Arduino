[
    {
        "id": "1",
        "type": "tab",
        "label": "ESP32 Control Dashboard",
        "disabled": false,
        "info": ""
    },
    {
        "id": "mqtt_out_luminaria",
        "type": "mqtt out",
        "z": "1",
        "name": "Luminaria Control",
        "topic": "control/luminaria",
        "qos": "",
        "retain": "",
        "broker": "mqtt_broker",
        "x": 300,
        "y": 80,
        "wires": []
    },
    {
        "id": "mqtt_out_led",
        "type": "mqtt out",
        "z": "1",
        "name": "LED Control",
        "topic": "control/led",
        "qos": "",
        "retain": "",
        "broker": "mqtt_broker",
        "x": 300,
        "y": 160,
        "wires": []
    },
    {
        "id": "mqtt_out_rgb",
        "type": "mqtt out",
        "z": "1",
        "name": "RGB Control",
        "topic": "control/rgb",
        "qos": "",
        "retain": "",
        "broker": "mqtt_broker",
        "x": 500,
        "y": 240,
        "wires": []
    },
    {
        "id": "mqtt_out_servo",
        "type": "mqtt out",
        "z": "1",
        "name": "Servo Control",
        "topic": "control/servo",
        "qos": "",
        "retain": "",
        "broker": "mqtt_broker",
        "x": 300,
        "y": 320,
        "wires": []
    },
    {
        "id": "mqtt_out_stepper",
        "type": "mqtt out",
        "z": "1",
        "name": "Stepper Control",
        "topic": "control/stepper",
        "qos": "",
        "retain": "",
        "broker": "mqtt_broker",
        "x": 300,
        "y": 400,
        "wires": []
    },
    {
        "id": "mqtt_in_ldr",
        "type": "mqtt in",
        "z": "1",
        "name": "LDR Sensor",
        "topic": "sensor/light",
        "qos": "2",
        "datatype": "auto",
        "broker": "mqtt_broker",
        "x": 200,
        "y": 480,
        "wires": [
            ["gauge_ldr", "chart_ldr"]
        ]
    },
    {
        "id": "switch_luminaria",
        "type": "ui_switch",
        "z": "1",
        "name": "Luminaria Switch",
        "label": "Luminaria",
        "group": "dashboard_group",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "offvalue": "OFF",
        "offvalueType": "str",
        "x": 100,
        "y": 80,
        "wires": [["mqtt_out_luminaria"]]
    },
    {
        "id": "switch_led",
        "type": "ui_switch",
        "z": "1",
        "name": "LED Switch",
        "label": "LED",
        "group": "dashboard_group",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "offvalue": "OFF",
        "offvalueType": "str",
        "x": 100,
        "y": 160,
        "wires": [["mqtt_out_led"]]
    },
    {
        "id": "color_picker_rgb",
        "type": "ui_colour_picker",
        "z": "1",
        "name": "RGB Color Picker",
        "label": "RGB",
        "group": "dashboard_group",
        "order": 3,
        "width": 3,
        "height": 1,
        "format": "rgb",
        "outformat": "string",
        "x": 100,
        "y": 240,
        "wires": [["function_rgb_formatter"]]
    },
    {
        "id": "function_rgb_formatter",
        "type": "function",
        "z": "1",
        "name": "RGB Formatter",
        "func": "\nlet hex = msg.payload.replace(\"#\", \"\");\nlet r = parseInt(hex.substring(0, 2), 16);\nlet g = parseInt(hex.substring(2, 4), 16);\nlet b = parseInt(hex.substring(4, 6), 16);\nmsg.payload = `${(\"000\" + r).slice(-3)},${(\"000\" + g).slice(-3)},${(\"000\" + b).slice(-3)}`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 300,
        "y": 240,
        "wires": [["mqtt_out_rgb"]]
    },
    {
        "id": "slider_servo",
        "type": "ui_slider",
        "z": "1",
        "name": "Servo Slider",
        "label": "Servo Angle",
        "group": "dashboard_group",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": true,
        "topic": "",
        "min": 0,
        "max": 180,
        "step": 1,
        "x": 100,
        "y": 320,
        "wires": [["mqtt_out_servo"]]
    },
    {
        "id": "number_stepper",
        "type": "ui_numeric",
        "z": "1",
        "name": "Stepper Steps",
        "label": "Stepper Steps",
        "group": "dashboard_group",
        "order": 5,
        "width": 3,
        "height": 1,
        "passthru": true,
        "topic": "",
        "format": "{{value}}",
        "min": 0,
        "max": 1000,
        "step": 1,
        "x": 100,
        "y": 400,
        "wires": [["mqtt_out_stepper"]]
    },
    {
        "id": "gauge_ldr",
        "type": "ui_gauge",
        "z": "1",
        "name": "LDR Gauge",
        "label": "Luz Ambiente",
        "group": "dashboard_group",
        "order": 6,
        "width": 3,
        "height": 1,
        "format": "{{value}}",
        "min": 0,
        "max": 1023,
        "x": 400,
        "y": 480,
        "wires": []
    },
    {
        "id": "chart_ldr",
        "type": "ui_chart",
        "z": "1",
        "name": "LDR Chart",
        "label": "Historial Luz",
        "group": "dashboard_group",
        "order": 7,
        "width": 6,
        "height": 3,
        "x": 600,
        "y": 480,
        "wires": []
    },
    {
        "id": "mqtt_broker",
        "type": "mqtt-broker",
        "z": "",
        "name": "MQTT Broker",
        "broker": "broker.emqx.io",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "dashboard_group",
        "type": "ui_group",
        "z": "",
        "name": "Control Panel",
        "tab": "dashboard_tab",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "dashboard_tab",
        "type": "ui_tab",
        "z": "",
        "name": "ESP32 Control Dashboard",
        "icon": "dashboard",
        "order": 1
    }
]
